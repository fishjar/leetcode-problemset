{
  "data": {
    "question": {
      "questionId": "197",
      "questionFrontendId": "197",
      "boundTopicId": 1287,
      "title": "Rising Temperature",
      "titleSlug": "rising-temperature",
      "content": "<p>Table: <code>Weather</code></p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| recordDate    | date    |\n| temperature   | int     |\n+---------------+---------+\nid is the primary key for this table.\nThis table contains information about the temperature in a certain day.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to find all dates&#39; <code>id</code>&nbsp;with higher temperature compared to its previous dates (yesterday).</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example:</p>\n\n<pre>\n<code>Weather</code>\n+----+------------+-------------+\n| id | recordDate | Temperature |\n+----+------------+-------------+\n| 1  | 2015-01-01 | 10          |\n| 2  | 2015-01-02 | 25          |\n| 3  | 2015-01-03 | 20          |\n| 4  | 2015-01-04 | 30          |\n+----+------------+-------------+\n\nResult table:\n+----+\n| id |\n+----+\n| 2  |\n| 4  |\n+----+\nIn 2015-01-02, temperature was higher than the previous day (10 -&gt; 25).\nIn 2015-01-04, temperature was higher than the previous day (30 -&gt; 20).\n</pre>\n",
      "translatedTitle": "上升的温度",
      "translatedContent": "<p>给定一个 <code>Weather</code> 表，编写一个 SQL 查询，来查找与之前（昨天的）日期相比温度更高的所有日期的 Id。</p>\n\n<pre>+---------+------------------+------------------+\n| Id(INT) | RecordDate(DATE) | Temperature(INT) |\n+---------+------------------+------------------+\n|       1 |       2015-01-01 |               10 |\n|       2 |       2015-01-02 |               25 |\n|       3 |       2015-01-03 |               20 |\n|       4 |       2015-01-04 |               30 |\n+---------+------------------+------------------+</pre>\n\n<p>例如，根据上述给定的 <code>Weather</code> 表格，返回如下 Id:</p>\n\n<pre>+----+\n| Id |\n+----+\n|  2 |\n|  4 |\n+----+</pre>\n",
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 154,
      "dislikes": 0,
      "isLiked": null,
      "similarQuestions": "[]",
      "contributors": [],
      "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false, \"typescript\": false}",
      "topicTags": [],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "MySQL",
          "langSlug": "mysql",
          "code": "# Write your MySQL query statement below",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "MS SQL Server",
          "langSlug": "mssql",
          "code": "/* Write your T-SQL query statement below */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Oracle",
          "langSlug": "oraclesql",
          "code": "/* Write your PL/SQL query statement below */",
          "__typename": "CodeSnippetNode"
        }
      ],
      "stats": "{\"totalAccepted\": \"54K\", \"totalSubmission\": \"103K\", \"totalAcceptedRaw\": 54030, \"totalSubmissionRaw\": 103037, \"acRate\": \"52.4%\"}",
      "hints": [],
      "solution": {
        "id": "96",
        "canSeeDetail": true,
        "__typename": "ArticleNode"
      },
      "status": null,
      "sampleTestCase": "{\"headers\": {\"Weather\": [\"Id\", \"RecordDate\", \"Temperature\"]}, \"rows\": {\"Weather\": [[1, \"2015-01-01\", 10], [2, \"2015-01-02\", 25], [3, \"2015-01-03\", 20], [4, \"2015-01-04\", 30]]}}",
      "metaData": "{\r\n  \"mysql\": [\r\n    \"Create table If Not Exists Weather (Id int, RecordDate date, Temperature int)\"\r\n  ],\r\n  \"mssql\": [\r\n    \"create table Weather ( Id int, RecordDate date, Temperature int )\"\r\n  ],\r\n  \"oraclesql\": [\r\n    \"create table Weather ( Id int, RecordDate date, Temperature int )\",\r\n    \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"\r\n  ],\r\n  \"database\": true\r\n}",
      "judgerAvailable": true,
      "judgeType": "large",
      "mysqlSchemas": [
        "Create table If Not Exists Weather (Id int, RecordDate date, Temperature int)",
        "Truncate table Weather",
        "insert into Weather (Id, RecordDate, Temperature) values ('1', '2015-01-01', '10')",
        "insert into Weather (Id, RecordDate, Temperature) values ('2', '2015-01-02', '25')",
        "insert into Weather (Id, RecordDate, Temperature) values ('3', '2015-01-03', '20')",
        "insert into Weather (Id, RecordDate, Temperature) values ('4', '2015-01-04', '30')"
      ],
      "enableRunCode": true,
      "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>\\u4f7f\\u7528<code>MS SQL Server<\\/code>\\u6267\\u884c\\u3002<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>\\u4f7f\\u7528<code>Oracle SQL<\\/code>\\u6267\\u884c\\u3002<\\/p>\"]}",
      "book": null,
      "isSubscribed": false,
      "isDailyQuestion": false,
      "dailyRecordStatus": null,
      "editorType": "CKEDITOR",
      "ugcQuestionId": null,
      "style": "LEETCODE",
      "__typename": "QuestionNode"
    }
  }
}
