{
  "data": {
    "question": {
      "questionId": "183",
      "questionFrontendId": "183",
      "boundTopicId": 1073,
      "title": "Customers Who Never Order",
      "titleSlug": "customers-who-never-order",
      "content": "<p>Suppose that a website contains two tables, the <code>Customers</code> table and the <code>Orders</code> table. Write a SQL query to find all customers who never order anything.</p>\r\n\r\n<p>Table: <code>Customers</code>.</p>\r\n\r\n<pre>\r\n+----+-------+\r\n| Id | Name  |\r\n+----+-------+\r\n| 1  | Joe   |\r\n| 2  | Henry |\r\n| 3  | Sam   |\r\n| 4  | Max   |\r\n+----+-------+\r\n</pre>\r\n\r\n<p>Table: <code>Orders</code>.</p>\r\n\r\n<pre>\r\n+----+------------+\r\n| Id | CustomerId |\r\n+----+------------+\r\n| 1  | 3          |\r\n| 2  | 1          |\r\n+----+------------+\r\n</pre>\r\n\r\n<p>Using the above tables as example, return the following:</p>\r\n\r\n<pre>\r\n+-----------+\r\n| Customers |\r\n+-----------+\r\n| Henry     |\r\n| Max       |\r\n+-----------+\r\n</pre>\r\n",
      "translatedTitle": "从不订购的客户",
      "translatedContent": "<p>某网站包含两个表，<code>Customers</code> 表和 <code>Orders</code> 表。编写一个 SQL 查询，找出所有从不订购任何东西的客户。</p>\n\n<p><code>Customers</code> 表：</p>\n\n<pre>+----+-------+\n| Id | Name  |\n+----+-------+\n| 1  | Joe   |\n| 2  | Henry |\n| 3  | Sam   |\n| 4  | Max   |\n+----+-------+\n</pre>\n\n<p><code>Orders</code> 表：</p>\n\n<pre>+----+------------+\n| Id | CustomerId |\n+----+------------+\n| 1  | 3          |\n| 2  | 1          |\n+----+------------+\n</pre>\n\n<p>例如给定上述表格，你的查询应返回：</p>\n\n<pre>+-----------+\n| Customers |\n+-----------+\n| Henry     |\n| Max       |\n+-----------+\n</pre>\n",
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 174,
      "dislikes": 0,
      "isLiked": null,
      "similarQuestions": "[]",
      "contributors": [],
      "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false, \"typescript\": false}",
      "topicTags": [],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "MySQL",
          "langSlug": "mysql",
          "code": "# Write your MySQL query statement below\n",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "MS SQL Server",
          "langSlug": "mssql",
          "code": "/* Write your T-SQL query statement below */\n",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Oracle",
          "langSlug": "oraclesql",
          "code": "/* Write your PL/SQL query statement below */\n",
          "__typename": "CodeSnippetNode"
        }
      ],
      "stats": "{\"totalAccepted\": \"88.2K\", \"totalSubmission\": \"130.7K\", \"totalAcceptedRaw\": 88208, \"totalSubmissionRaw\": 130703, \"acRate\": \"67.5%\"}",
      "hints": [],
      "solution": {
        "id": "94",
        "canSeeDetail": true,
        "__typename": "ArticleNode"
      },
      "status": null,
      "sampleTestCase": "{\"headers\": {\"Customers\": [\"Id\", \"Name\"], \"Orders\": [\"Id\", \"CustomerId\"]}, \"rows\": {\"Customers\": [[1, \"Joe\"], [2, \"Henry\"], [3, \"Sam\"], [4, \"Max\"]], \"Orders\": [[1, 3], [2, 1]]}}",
      "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Customers (Id int, Name varchar(255))\",\n    \"Create table If Not Exists Orders (Id int, CustomerId int)\"\n  ],\n  \"mssql\": [\n    \"create table Customers ( Id int,  Name varchar(255) )\",\n    \"Create table Orders (Id int, CustomerId int)\"\n  ],\n  \"oraclesql\": [\n    \"create table Customers ( Id int,  Name varchar(255) )\",\n    \"Create table Orders (Id int, CustomerId int)\"\n  ],\n  \"database\": true\n}",
      "judgerAvailable": true,
      "judgeType": "large",
      "mysqlSchemas": [
        "Create table If Not Exists Customers (Id int, Name varchar(255))",
        "Create table If Not Exists Orders (Id int, CustomerId int)",
        "Truncate table Customers",
        "insert into Customers (Id, Name) values ('1', 'Joe')",
        "insert into Customers (Id, Name) values ('2', 'Henry')",
        "insert into Customers (Id, Name) values ('3', 'Sam')",
        "insert into Customers (Id, Name) values ('4', 'Max')",
        "Truncate table Orders",
        "insert into Orders (Id, CustomerId) values ('1', '3')",
        "insert into Orders (Id, CustomerId) values ('2', '1')"
      ],
      "enableRunCode": true,
      "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>\\u4f7f\\u7528<code>MS SQL Server<\\/code>\\u6267\\u884c\\u3002<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>\\u4f7f\\u7528<code>Oracle SQL<\\/code>\\u6267\\u884c\\u3002<\\/p>\"]}",
      "book": null,
      "isSubscribed": false,
      "isDailyQuestion": false,
      "dailyRecordStatus": null,
      "editorType": "CKEDITOR",
      "ugcQuestionId": null,
      "style": "LEETCODE",
      "__typename": "QuestionNode"
    }
  }
}
