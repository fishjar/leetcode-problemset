{
  "data": {
    "question": {
      "questionId": "100169",
      "questionFrontendId": "面试题 03.02",
      "boundTopicId": 45973,
      "title": "Min Stack LCCI",
      "titleSlug": "min-stack-lcci",
      "content": "<p>How would you design a stack which, in addition to push and pop, has a function min which returns the minimum element? Push, pop and min should all operate in 0(1) time.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\nMinStack minStack = new MinStack();\r\nminStack.push(-2);\r\nminStack.push(0);\r\nminStack.push(-3);\r\nminStack.getMin();   --&gt; return -3.\r\nminStack.pop();\r\nminStack.top();      --&gt; return 0.\r\nminStack.getMin();   --&gt; return -2.</pre>\r\n",
      "translatedTitle": "栈的最小值",
      "translatedContent": "<p>请设计一个栈，除了常规栈支持的pop与push函数以外，还支持min函数，该函数返回栈元素中的最小值。执行push、pop和min操作的时间复杂度必须为O(1)。</p><br><p><strong>示例：</strong><pre>MinStack minStack = new MinStack();<br>minStack.push(-2);<br>minStack.push(0);<br>minStack.push(-3);<br>minStack.getMin();   --> 返回 -3.<br>minStack.pop();<br>minStack.top();      --> 返回 0.<br>minStack.getMin();   --> 返回 -2.</pre></p>",
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 29,
      "dislikes": 0,
      "isLiked": null,
      "similarQuestions": "[]",
      "contributors": [],
      "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false, \"typescript\": false}",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": "栈",
          "__typename": "TopicTagNode"
        }
      ],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "C++",
          "langSlug": "cpp",
          "code": "class MinStack {\r\npublic:\r\n    /** initialize your data structure here. */\r\n    MinStack() {\r\n\r\n    }\r\n    \r\n    void push(int x) {\r\n\r\n    }\r\n    \r\n    void pop() {\r\n\r\n    }\r\n    \r\n    int top() {\r\n\r\n    }\r\n    \r\n    int getMin() {\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * MinStack* obj = new MinStack();\r\n * obj->push(x);\r\n * obj->pop();\r\n * int param_3 = obj->top();\r\n * int param_4 = obj->getMin();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Java",
          "langSlug": "java",
          "code": "class MinStack {\r\n\r\n    /** initialize your data structure here. */\r\n    public MinStack() {\r\n\r\n    }\r\n    \r\n    public void push(int x) {\r\n\r\n    }\r\n    \r\n    public void pop() {\r\n\r\n    }\r\n    \r\n    public int top() {\r\n\r\n    }\r\n    \r\n    public int getMin() {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * MinStack obj = new MinStack();\r\n * obj.push(x);\r\n * obj.pop();\r\n * int param_3 = obj.top();\r\n * int param_4 = obj.getMin();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Python",
          "langSlug": "python",
          "code": "class MinStack(object):\r\n\r\n    def __init__(self):\r\n        \"\"\"\r\n        initialize your data structure here.\r\n        \"\"\"\r\n\r\n\r\n    def push(self, x):\r\n        \"\"\"\r\n        :type x: int\r\n        :rtype: None\r\n        \"\"\"\r\n\r\n\r\n    def pop(self):\r\n        \"\"\"\r\n        :rtype: None\r\n        \"\"\"\r\n\r\n\r\n    def top(self):\r\n        \"\"\"\r\n        :rtype: int\r\n        \"\"\"\r\n\r\n\r\n    def getMin(self):\r\n        \"\"\"\r\n        :rtype: int\r\n        \"\"\"\r\n\r\n\r\n\r\n# Your MinStack object will be instantiated and called as such:\r\n# obj = MinStack()\r\n# obj.push(x)\r\n# obj.pop()\r\n# param_3 = obj.top()\r\n# param_4 = obj.getMin()",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Python3",
          "langSlug": "python3",
          "code": "class MinStack:\r\n\r\n    def __init__(self):\r\n        \"\"\"\r\n        initialize your data structure here.\r\n        \"\"\"\r\n\r\n\r\n    def push(self, x: int) -> None:\r\n\r\n\r\n    def pop(self) -> None:\r\n\r\n\r\n    def top(self) -> int:\r\n\r\n\r\n    def getMin(self) -> int:\r\n\r\n\r\n\r\n# Your MinStack object will be instantiated and called as such:\r\n# obj = MinStack()\r\n# obj.push(x)\r\n# obj.pop()\r\n# param_3 = obj.top()\r\n# param_4 = obj.getMin()",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "C",
          "langSlug": "c",
          "code": "\r\n\r\n\r\ntypedef struct {\r\n\r\n} MinStack;\r\n\r\n/** initialize your data structure here. */\r\n\r\nMinStack* minStackCreate() {\r\n\r\n}\r\n\r\nvoid minStackPush(MinStack* obj, int x) {\r\n\r\n}\r\n\r\nvoid minStackPop(MinStack* obj) {\r\n\r\n}\r\n\r\nint minStackTop(MinStack* obj) {\r\n\r\n}\r\n\r\nint minStackGetMin(MinStack* obj) {\r\n\r\n}\r\n\r\nvoid minStackFree(MinStack* obj) {\r\n\r\n}\r\n\r\n/**\r\n * Your MinStack struct will be instantiated and called as such:\r\n * MinStack* obj = minStackCreate();\r\n * minStackPush(obj, x);\r\n \r\n * minStackPop(obj);\r\n \r\n * int param_3 = minStackTop(obj);\r\n \r\n * int param_4 = minStackGetMin(obj);\r\n \r\n * minStackFree(obj);\r\n*/",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "C#",
          "langSlug": "csharp",
          "code": "public class MinStack {\r\n\r\n    /** initialize your data structure here. */\r\n    public MinStack() {\r\n\r\n    }\r\n    \r\n    public void Push(int x) {\r\n\r\n    }\r\n    \r\n    public void Pop() {\r\n\r\n    }\r\n    \r\n    public int Top() {\r\n\r\n    }\r\n    \r\n    public int GetMin() {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * MinStack obj = new MinStack();\r\n * obj.Push(x);\r\n * obj.Pop();\r\n * int param_3 = obj.Top();\r\n * int param_4 = obj.GetMin();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "JavaScript",
          "langSlug": "javascript",
          "code": "/**\r\n * initialize your data structure here.\r\n */\r\nvar MinStack = function() {\r\n\r\n};\r\n\r\n/** \r\n * @param {number} x\r\n * @return {void}\r\n */\r\nMinStack.prototype.push = function(x) {\r\n\r\n};\r\n\r\n/**\r\n * @return {void}\r\n */\r\nMinStack.prototype.pop = function() {\r\n\r\n};\r\n\r\n/**\r\n * @return {number}\r\n */\r\nMinStack.prototype.top = function() {\r\n\r\n};\r\n\r\n/**\r\n * @return {number}\r\n */\r\nMinStack.prototype.getMin = function() {\r\n\r\n};\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * var obj = new MinStack()\r\n * obj.push(x)\r\n * obj.pop()\r\n * var param_3 = obj.top()\r\n * var param_4 = obj.getMin()\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Ruby",
          "langSlug": "ruby",
          "code": "class MinStack\r\n\r\n=begin\r\n    initialize your data structure here.\r\n=end\r\n    def initialize()\r\n\r\n    end\r\n\r\n\r\n=begin\r\n    :type x: Integer\r\n    :rtype: Void\r\n=end\r\n    def push(x)\r\n\r\n    end\r\n\r\n\r\n=begin\r\n    :rtype: Void\r\n=end\r\n    def pop()\r\n\r\n    end\r\n\r\n\r\n=begin\r\n    :rtype: Integer\r\n=end\r\n    def top()\r\n\r\n    end\r\n\r\n\r\n=begin\r\n    :rtype: Integer\r\n=end\r\n    def get_min()\r\n\r\n    end\r\n\r\n\r\nend\r\n\r\n# Your MinStack object will be instantiated and called as such:\r\n# obj = MinStack.new()\r\n# obj.push(x)\r\n# obj.pop()\r\n# param_3 = obj.top()\r\n# param_4 = obj.get_min()",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Swift",
          "langSlug": "swift",
          "code": "\r\nclass MinStack {\r\n\r\n    /** initialize your data structure here. */\r\n    init() {\r\n\r\n    }\r\n    \r\n    func push(_ x: Int) {\r\n\r\n    }\r\n    \r\n    func pop() {\r\n\r\n    }\r\n    \r\n    func top() -> Int {\r\n\r\n    }\r\n    \r\n    func getMin() -> Int {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * let obj = MinStack()\r\n * obj.push(x)\r\n * obj.pop()\r\n * let ret_3: Int = obj.top()\r\n * let ret_4: Int = obj.getMin()\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Go",
          "langSlug": "golang",
          "code": "type MinStack struct {\r\n\r\n}\r\n\r\n\r\n/** initialize your data structure here. */\r\nfunc Constructor() MinStack {\r\n\r\n}\r\n\r\n\r\nfunc (this *MinStack) Push(x int)  {\r\n\r\n}\r\n\r\n\r\nfunc (this *MinStack) Pop()  {\r\n\r\n}\r\n\r\n\r\nfunc (this *MinStack) Top() int {\r\n\r\n}\r\n\r\n\r\nfunc (this *MinStack) GetMin() int {\r\n\r\n}\r\n\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * obj := Constructor();\r\n * obj.Push(x);\r\n * obj.Pop();\r\n * param_3 := obj.Top();\r\n * param_4 := obj.GetMin();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Scala",
          "langSlug": "scala",
          "code": "class MinStack() {\r\n\r\n    /** initialize your data structure here. */\r\n\r\n\r\n    def push(x: Int) {\r\n\r\n    }\r\n\r\n    def pop() {\r\n\r\n    }\r\n\r\n    def top(): Int = {\r\n\r\n    }\r\n\r\n    def getMin(): Int = {\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * var obj = new MinStack()\r\n * obj.push(x)\r\n * obj.pop()\r\n * var param_3 = obj.top()\r\n * var param_4 = obj.getMin()\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Kotlin",
          "langSlug": "kotlin",
          "code": "class MinStack() {\r\n\r\n    /** initialize your data structure here. */\r\n\r\n\r\n    fun push(x: Int) {\r\n\r\n    }\r\n\r\n    fun pop() {\r\n\r\n    }\r\n\r\n    fun top(): Int {\r\n\r\n    }\r\n\r\n    fun getMin(): Int {\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * var obj = MinStack()\r\n * obj.push(x)\r\n * obj.pop()\r\n * var param_3 = obj.top()\r\n * var param_4 = obj.getMin()\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Rust",
          "langSlug": "rust",
          "code": "struct MinStack {\r\n\r\n}\r\n\r\n\r\n/**\r\n * `&self` means the method takes an immutable reference.\r\n * If you need a mutable reference, change it to `&mut self` instead.\r\n */\r\nimpl MinStack {\r\n\r\n    /** initialize your data structure here. */\r\n    fn new() -> Self {\r\n\r\n    }\r\n    \r\n    fn push(&self, x: i32) {\r\n\r\n    }\r\n    \r\n    fn pop(&self) {\r\n\r\n    }\r\n    \r\n    fn top(&self) -> i32 {\r\n\r\n    }\r\n    \r\n    fn get_min(&self) -> i32 {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * let obj = MinStack::new();\r\n * obj.push(x);\r\n * obj.pop();\r\n * let ret_3: i32 = obj.top();\r\n * let ret_4: i32 = obj.get_min();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "PHP",
          "langSlug": "php",
          "code": "class MinStack {\r\n    /**\r\n     * initialize your data structure here.\r\n     */\r\n    function __construct() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @param Integer $x\r\n     * @return NULL\r\n     */\r\n    function push($x) {\r\n\r\n    }\r\n\r\n    /**\r\n     * @return NULL\r\n     */\r\n    function pop() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @return Integer\r\n     */\r\n    function top() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @return Integer\r\n     */\r\n    function getMin() {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * $obj = MinStack();\r\n * $obj->push($x);\r\n * $obj->pop();\r\n * $ret_3 = $obj->top();\r\n * $ret_4 = $obj->getMin();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "TypeScript",
          "langSlug": "typescript",
          "code": "class MinStack {\n    constructor() {\n\n    }\n\n    push(x: number): void {\n\n    }\n\n    pop(): void {\n\n    }\n\n    top(): number {\n\n    }\n\n    getMin(): number {\n\n    }\n}\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * var obj = new MinStack()\n * obj.push(x)\n * obj.pop()\n * var param_3 = obj.top()\n * var param_4 = obj.getMin()\n */",
          "__typename": "CodeSnippetNode"
        }
      ],
      "stats": "{\"totalAccepted\": \"12.1K\", \"totalSubmission\": \"20K\", \"totalAcceptedRaw\": 12079, \"totalSubmissionRaw\": 19964, \"acRate\": \"60.5%\"}",
      "hints": [
        "注意最小的元素不会经常变化。它只在添加更小的元素或最小的元素被弹出时才发生变化。",
        "如果保持追踪每个栈节点的额外数据会怎么样？什么样的数据可能更容易解决这个问题呢？",
        "考虑让每个节点知道它“子栈”的最小值（包括它下面的所有元素，以及它本身）。"
      ],
      "solution": null,
      "status": null,
      "sampleTestCase": "[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]",
      "metaData": "{\r\n  \"classname\": \"MinStack\",\r\n  \"maxbytesperline\": 130000,\r\n  \"constructor\": {\r\n      \"params\": [\r\n        {\r\n            \"type\": \"integer\",\r\n            \"name\": \"maxSize\",\r\n            \"lang\": \"c\",\r\n            \"value\": \"64000\"\r\n        }\r\n      ],\r\n      \"comment\": \"initialize your data structure here.\"\r\n  },\r\n  \"methods\": [\r\n      { \"name\" : \"push\",\r\n        \"params\": [\r\n            {\r\n                \"type\": \"integer\",\r\n                \"name\": \"x\"\r\n            }],\r\n        \"return\": {\r\n            \"type\": \"void\"\r\n        }\r\n      },\r\n      { \"name\": \"pop\",\r\n        \"params\": [],\r\n        \"return\": {\r\n            \"type\": \"void\"\r\n        }\r\n      },\r\n      { \"name\": \"top\",\r\n        \"params\": [],\r\n        \"return\": {\r\n            \"type\": \"integer\"\r\n        }\r\n      },\r\n      { \"name\": \"getMin\",\r\n        \"params\": [],\r\n        \"return\": {\r\n            \"type\": \"integer\"\r\n        }\r\n      }\r\n  ],\r\n  \"systemdesign\": true,\r\n  \"params\": [\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<String>\",\r\n        \"dealloc\": true\r\n    }\r\n}",
      "judgerAvailable": true,
      "judgeType": "large",
      "mysqlSchemas": [],
      "enableRunCode": true,
      "envInfo": "{\"cpp\":[\"C++\",\"<p>\\u7248\\u672c\\uff1a<code>clang 9<\\/code> \\u91c7\\u7528\\u6700\\u65b0C++ 17\\u6807\\u51c6\\u3002<\\/p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1<\\/code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https:\\/\\/github.com\\/google\\/sanitizers\\/wiki\\/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer<\\/a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds<\\/code>\\u548c<code>use-after-free<\\/code>\\u9519\\u8bef\\u3002<\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002<\\/p>\"],\"java\":[\"Java\",\"<p>\\u7248\\u672c\\uff1a<code>Java SE 13<\\/code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002<\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002<\\/p>\"],\"python\":[\"Python\",\"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12<\\/code><\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/array.html\\\" target=\\\"_blank\\\">array<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/bisect.html\\\" target=\\\"_blank\\\">bisect<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/collections.html\\\" target=\\\"_blank\\\">collections<\\/a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002<\\/p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https:\\/\\/www.python.org\\/dev\\/peps\\/pep-0373\\/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4<\\/a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002<\\/p>\"],\"c\":[\"C\",\"<p>\\u7248\\u672c\\uff1a<code>GCC 8.2<\\/code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002<\\/p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1<\\/code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https:\\/\\/github.com\\/google\\/sanitizers\\/wiki\\/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer<\\/a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds<\\/code>\\u548c<code>use-after-free<\\/code>\\u9519\\u8bef\\u3002<\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002<\\/p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https:\\/\\/troydhanson.github.io\\/uthash\\/\\\" target=\\\"_blank\\\">uthash<\\/a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:<\\/p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a<\\/b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            \\/* we'll use this field as the key *\\/\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; \\/* makes this structure hashable *\\/\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n<\\/pre>\\r\\n<\\/p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a<\\/b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n<\\/pre>\\r\\n<\\/p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a<\\/b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n<\\/pre>\\r\\n<\\/p>\"],\"csharp\":[\"C#\",\"<p><a href=\\\"https:\\/\\/docs.microsoft.com\\/en-us\\/dotnet\\/csharp\\/whats-new\\/csharp-8\\\" target=\\\"_blank\\\">C# 8.0<\\/a><\\/p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>\\/debug<\\/code>)\\u3002<\\/p>\"],\"javascript\":[\"JavaScript\",\"<p>\\u7248\\u672c\\uff1a<code>Node.js 14.8.0<\\/code><\\/p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony<\\/code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http:\\/\\/node.green\\/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027<\\/a>\\u3002<\\/p>\\r\\n\\r\\n<p><a href=\\\"https:\\/\\/lodash.com\\\" target=\\\"_blank\\\">lodash.js<\\/a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002<\\/p>\"],\"ruby\":[\"Ruby\",\"<p>\\u4f7f\\u7528<code>Ruby 2.7<\\/code>\\u6267\\u884c<\\/p>\"],\"swift\":[\"Swift\",\"<p>\\u7248\\u672c\\uff1a<code>Swift 5.2.5<\\/code><\\/p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https:\\/\\/swift.org\\/download\\/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift<\\/a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002<\\/p>\"],\"golang\":[\"Go\",\"<p>\\u7248\\u672c\\uff1a<code>Go 1.15<\\/code><\\/p>\"],\"python3\":[\"Python3\",\"<p>\\u7248\\u672c\\uff1a<code>Python 3.8<\\/code><\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/array.html\\\" target=\\\"_blank\\\">array<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/bisect.html\\\" target=\\\"_blank\\\">bisect<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/collections.html\\\" target=\\\"_blank\\\">collections<\\/a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002<\\/p>\"],\"scala\":[\"Scala\",\"<p>\\u7248\\u672c\\uff1a<code>Scala 2.13<\\/code><\\/p>\"],\"kotlin\":[\"Kotlin\",\"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.3.10<\\/code><\\/p>\"],\"rust\":[\"Rust\",\"<p>\\u7248\\u672c\\uff1a<code>rust 1.46.0<\\/code><\\/p>\\r\\n\\r\\n<p>\\u652f\\u6301 crates.io \\u7684 <a href=\\\"https:\\/\\/crates.io\\/crates\\/rand\\\" target=\\\"_blank\\\">rand<\\/a><\\/p>\"],\"php\":[\"PHP\",\"<p>Run with <code>PHP 7.2<\\/code>.<\\/p>\"],\"typescript\":[\"TypeScript\",\"TypeScript 3.8\\r\\n\\r\\nCompile Options: --strict --target ES6\"]}",
      "book": {
        "id": "2",
        "bookName": "《程序员面试金典（第 6 版）》",
        "pressName": "图灵公司",
        "source": "《程序员面试金典（第 6 版）》独家授权",
        "shortDescription": "英文版：Cracking the Coding Interview，源自硅谷程序员的面试红宝书",
        "fullDescription": "本书是原谷歌资深面试官的经验之作，帮助了许多想要加入脸书、苹果、谷歌等 IT 名企的求职者拿到 Dream offer。本专题的 100+ 编程面试题是在原书基础上精心挑选出来的，帮助你轻松应战 IT 名企技术面试。",
        "bookImgUrl": "https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/09/30/book_2.jpg",
        "pressImgUrl": "https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/02/11/logo20190828-02.png",
        "productUrl": "",
        "__typename": "CategoryInfoNode"
      },
      "isSubscribed": false,
      "isDailyQuestion": false,
      "dailyRecordStatus": null,
      "editorType": "CKEDITOR",
      "ugcQuestionId": null,
      "style": "LEETCODE",
      "__typename": "QuestionNode"
    }
  }
}
