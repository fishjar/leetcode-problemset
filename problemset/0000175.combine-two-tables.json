{
  "data": {
    "question": {
      "questionId": "175",
      "questionFrontendId": "175",
      "boundTopicId": 1060,
      "title": "Combine Two Tables",
      "titleSlug": "combine-two-tables",
      "content": "<p>Table: <code>Person</code></p>\r\n\r\n<pre>\r\n+-------------+---------+\r\n| Column Name | Type    |\r\n+-------------+---------+\r\n| PersonId    | int     |\r\n| FirstName   | varchar |\r\n| LastName    | varchar |\r\n+-------------+---------+\r\nPersonId is the primary key column for this table.\r\n</pre>\r\n\r\n<p>Table: <code>Address</code></p>\r\n\r\n<pre>\r\n+-------------+---------+\r\n| Column Name | Type    |\r\n+-------------+---------+\r\n| AddressId   | int     |\r\n| PersonId    | int     |\r\n| City        | varchar |\r\n| State       | varchar |\r\n+-------------+---------+\r\nAddressId is the primary key column for this table.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Write a SQL query for a report that provides the following information for each person in the Person table, regardless if there is an address for each of those people:</p>\r\n\r\n<pre>\r\nFirstName, LastName, City, State\r\n</pre>\r\n",
      "translatedTitle": "组合两个表",
      "translatedContent": "<p>表1: <code>Person</code></p>\n\n<pre>+-------------+---------+\n| 列名         | 类型     |\n+-------------+---------+\n| PersonId    | int     |\n| FirstName   | varchar |\n| LastName    | varchar |\n+-------------+---------+\nPersonId 是上表主键\n</pre>\n\n<p>表2: <code>Address</code></p>\n\n<pre>+-------------+---------+\n| 列名         | 类型    |\n+-------------+---------+\n| AddressId   | int     |\n| PersonId    | int     |\n| City        | varchar |\n| State       | varchar |\n+-------------+---------+\nAddressId 是上表主键\n</pre>\n\n<p>&nbsp;</p>\n\n<p>编写一个 SQL 查询，满足条件：无论 person 是否有地址信息，都需要基于上述两表提供&nbsp;person 的以下信息：</p>\n\n<p>&nbsp;</p>\n\n<pre>FirstName, LastName, City, State\n</pre>\n",
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 681,
      "dislikes": 0,
      "isLiked": null,
      "similarQuestions": "[{\"title\": \"Employee Bonus\", \"titleSlug\": \"employee-bonus\", \"difficulty\": \"Easy\", \"translatedTitle\": \"\\u5458\\u5de5\\u5956\\u91d1\"}]",
      "contributors": [],
      "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false, \"typescript\": false}",
      "topicTags": [],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "MySQL",
          "langSlug": "mysql",
          "code": "# Write your MySQL query statement below\n",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "MS SQL Server",
          "langSlug": "mssql",
          "code": "/* Write your T-SQL query statement below */\n",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Oracle",
          "langSlug": "oraclesql",
          "code": "/* Write your PL/SQL query statement below */\n",
          "__typename": "CodeSnippetNode"
        }
      ],
      "stats": "{\"totalAccepted\": \"180.9K\", \"totalSubmission\": \"245.8K\", \"totalAcceptedRaw\": 180875, \"totalSubmissionRaw\": 245785, \"acRate\": \"73.6%\"}",
      "hints": [],
      "solution": {
        "id": "101",
        "canSeeDetail": true,
        "__typename": "ArticleNode"
      },
      "status": null,
      "sampleTestCase": "{\"headers\": {\"Person\": [\"PersonId\", \"LastName\", \"FirstName\"], \"Address\": [\"AddressId\", \"PersonId\", \"City\", \"State\"]}, \"rows\": {\"Person\": [[1, \"Wang\", \"Allen\"]], \"Address\": [[1, 2, \"New York City\", \"New York\"]]}}",
      "metaData": "{\n  \"mysql\": [\n    \"Create table Person (PersonId int, FirstName varchar(255), LastName varchar(255))\",\n    \"Create table Address (AddressId int, PersonId int, City varchar(255), State varchar(255))\"\n  ],\n  \"mssql\": [\n    \"create table Person ( PersonId int, FirstName varchar(255), LastName varchar(255) )\",\n    \"create table Address ( AddressId int, PersonId int, City varchar(255), State varchar(255) )\"\n  ],\n  \"oraclesql\": [\n    \"create table Person ( PersonId int, FirstName varchar(255), LastName varchar(255) )\",\n    \"create table Address ( AddressId int, PersonId int, City varchar(255), State varchar(255) )\"\n  ],\n  \"database\": true,\n  \"manual\": false\n}",
      "judgerAvailable": true,
      "judgeType": "large",
      "mysqlSchemas": [
        "Create table Person (PersonId int, FirstName varchar(255), LastName varchar(255))",
        "Create table Address (AddressId int, PersonId int, City varchar(255), State varchar(255))",
        "Truncate table Person",
        "insert into Person (PersonId, LastName, FirstName) values ('1', 'Wang', 'Allen')",
        "Truncate table Address",
        "insert into Address (AddressId, PersonId, City, State) values ('1', '2', 'New York City', 'New York')"
      ],
      "enableRunCode": true,
      "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>\\u4f7f\\u7528<code>MS SQL Server<\\/code>\\u6267\\u884c\\u3002<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>\\u4f7f\\u7528<code>Oracle SQL<\\/code>\\u6267\\u884c\\u3002<\\/p>\"]}",
      "book": null,
      "isSubscribed": false,
      "isDailyQuestion": false,
      "dailyRecordStatus": null,
      "editorType": "CKEDITOR",
      "ugcQuestionId": null,
      "style": "LEETCODE",
      "__typename": "QuestionNode"
    }
  }
}
