{
  "data": {
    "question": {
      "questionId": "1000028",
      "questionFrontendId": "面试题 17.20",
      "boundTopicId": 93294,
      "title": "Continuous Median LCCI",
      "titleSlug": "continuous-median-lcci",
      "content": "<p>Numbers are randomly generated and passed to a method. Write a program to find and maintain the median value as new values are generated.</p>\r\n\r\n<p>Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.</p>\r\n\r\n<p>For example,</p>\r\n\r\n<p>[2,3,4], the median is&nbsp;3</p>\r\n\r\n<p>[2,3], the median is (2 + 3) / 2 = 2.5</p>\r\n\r\n<p>Design a data structure that supports the following two operations:</p>\r\n\r\n<ul>\r\n\t<li>void addNum(int num) - Add a integer number from the data stream to the data structure.</li>\r\n\t<li>double findMedian() - Return the median of all elements so far.</li>\r\n</ul>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\naddNum(1)\r\naddNum(2)\r\nfindMedian() -&gt; 1.5\r\naddNum(3) \r\nfindMedian() -&gt; 2\r\n</pre>\r\n",
      "translatedTitle": "连续中值",
      "translatedContent": "<p>随机产生数字并传递给一个方法。你能否完成这个方法，在每次产生新值时，寻找当前所有值的中间值（中位数）并保存。</p>\n\n<p>中位数是有序列表中间的数。如果列表长度是偶数，中位数则是中间两个数的平均值。</p>\n\n<p>例如，</p>\n\n<p>[2,3,4]&nbsp;的中位数是 3</p>\n\n<p>[2,3] 的中位数是 (2 + 3) / 2 = 2.5</p>\n\n<p>设计一个支持以下两种操作的数据结构：</p>\n\n<ul>\n\t<li>void addNum(int num) - 从数据流中添加一个整数到数据结构中。</li>\n\t<li>double findMedian() - 返回目前所有元素的中位数。</li>\n</ul>\n\n<p><strong>示例：</strong></p>\n\n<pre>addNum(1)\naddNum(2)\nfindMedian() -&gt; 1.5\naddNum(3) \nfindMedian() -&gt; 2\n</pre>\n",
      "isPaidOnly": false,
      "difficulty": "Hard",
      "likes": 5,
      "dislikes": 0,
      "isLiked": null,
      "similarQuestions": "[]",
      "contributors": [],
      "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false, \"typescript\": false}",
      "topicTags": [
        {
          "name": "Heap",
          "slug": "heap",
          "translatedName": "堆",
          "__typename": "TopicTagNode"
        }
      ],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "C++",
          "langSlug": "cpp",
          "code": "class MedianFinder {\r\npublic:\r\n    /** initialize your data structure here. */\r\n    MedianFinder() {\r\n\r\n    }\r\n    \r\n    void addNum(int num) {\r\n\r\n    }\r\n    \r\n    double findMedian() {\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Your MedianFinder object will be instantiated and called as such:\r\n * MedianFinder* obj = new MedianFinder();\r\n * obj->addNum(num);\r\n * double param_2 = obj->findMedian();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Java",
          "langSlug": "java",
          "code": "class MedianFinder {\r\n\r\n    /** initialize your data structure here. */\r\n    public MedianFinder() {\r\n\r\n    }\r\n    \r\n    public void addNum(int num) {\r\n\r\n    }\r\n    \r\n    public double findMedian() {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your MedianFinder object will be instantiated and called as such:\r\n * MedianFinder obj = new MedianFinder();\r\n * obj.addNum(num);\r\n * double param_2 = obj.findMedian();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Python",
          "langSlug": "python",
          "code": "class MedianFinder(object):\r\n\r\n    def __init__(self):\r\n        \"\"\"\r\n        initialize your data structure here.\r\n        \"\"\"\r\n\r\n\r\n    def addNum(self, num):\r\n        \"\"\"\r\n        :type num: int\r\n        :rtype: None\r\n        \"\"\"\r\n\r\n\r\n    def findMedian(self):\r\n        \"\"\"\r\n        :rtype: float\r\n        \"\"\"\r\n\r\n\r\n\r\n# Your MedianFinder object will be instantiated and called as such:\r\n# obj = MedianFinder()\r\n# obj.addNum(num)\r\n# param_2 = obj.findMedian()",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Python3",
          "langSlug": "python3",
          "code": "class MedianFinder:\r\n\r\n    def __init__(self):\r\n        \"\"\"\r\n        initialize your data structure here.\r\n        \"\"\"\r\n\r\n\r\n    def addNum(self, num: int) -> None:\r\n\r\n\r\n    def findMedian(self) -> float:\r\n\r\n\r\n\r\n# Your MedianFinder object will be instantiated and called as such:\r\n# obj = MedianFinder()\r\n# obj.addNum(num)\r\n# param_2 = obj.findMedian()",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "C",
          "langSlug": "c",
          "code": "\r\n\r\n\r\ntypedef struct {\r\n\r\n} MedianFinder;\r\n\r\n/** initialize your data structure here. */\r\n\r\nMedianFinder* medianFinderCreate() {\r\n\r\n}\r\n\r\nvoid medianFinderAddNum(MedianFinder* obj, int num) {\r\n\r\n}\r\n\r\ndouble medianFinderFindMedian(MedianFinder* obj) {\r\n\r\n}\r\n\r\nvoid medianFinderFree(MedianFinder* obj) {\r\n\r\n}\r\n\r\n/**\r\n * Your MedianFinder struct will be instantiated and called as such:\r\n * MedianFinder* obj = medianFinderCreate();\r\n * medianFinderAddNum(obj, num);\r\n \r\n * double param_2 = medianFinderFindMedian(obj);\r\n \r\n * medianFinderFree(obj);\r\n*/",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "C#",
          "langSlug": "csharp",
          "code": "public class MedianFinder {\r\n\r\n    /** initialize your data structure here. */\r\n    public MedianFinder() {\r\n\r\n    }\r\n    \r\n    public void AddNum(int num) {\r\n\r\n    }\r\n    \r\n    public double FindMedian() {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your MedianFinder object will be instantiated and called as such:\r\n * MedianFinder obj = new MedianFinder();\r\n * obj.AddNum(num);\r\n * double param_2 = obj.FindMedian();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "JavaScript",
          "langSlug": "javascript",
          "code": "/**\r\n * initialize your data structure here.\r\n */\r\nvar MedianFinder = function() {\r\n\r\n};\r\n\r\n/** \r\n * @param {number} num\r\n * @return {void}\r\n */\r\nMedianFinder.prototype.addNum = function(num) {\r\n\r\n};\r\n\r\n/**\r\n * @return {number}\r\n */\r\nMedianFinder.prototype.findMedian = function() {\r\n\r\n};\r\n\r\n/**\r\n * Your MedianFinder object will be instantiated and called as such:\r\n * var obj = new MedianFinder()\r\n * obj.addNum(num)\r\n * var param_2 = obj.findMedian()\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Ruby",
          "langSlug": "ruby",
          "code": "class MedianFinder\r\n\r\n=begin\r\n    initialize your data structure here.\r\n=end\r\n    def initialize()\r\n\r\n    end\r\n\r\n\r\n=begin\r\n    :type num: Integer\r\n    :rtype: Void\r\n=end\r\n    def add_num(num)\r\n\r\n    end\r\n\r\n\r\n=begin\r\n    :rtype: Float\r\n=end\r\n    def find_median()\r\n\r\n    end\r\n\r\n\r\nend\r\n\r\n# Your MedianFinder object will be instantiated and called as such:\r\n# obj = MedianFinder.new()\r\n# obj.add_num(num)\r\n# param_2 = obj.find_median()",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Swift",
          "langSlug": "swift",
          "code": "\r\nclass MedianFinder {\r\n\r\n    /** initialize your data structure here. */\r\n    init() {\r\n\r\n    }\r\n    \r\n    func addNum(_ num: Int) {\r\n\r\n    }\r\n    \r\n    func findMedian() -> Double {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your MedianFinder object will be instantiated and called as such:\r\n * let obj = MedianFinder()\r\n * obj.addNum(num)\r\n * let ret_2: Double = obj.findMedian()\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Go",
          "langSlug": "golang",
          "code": "type MedianFinder struct {\r\n\r\n}\r\n\r\n\r\n/** initialize your data structure here. */\r\nfunc Constructor() MedianFinder {\r\n\r\n}\r\n\r\n\r\nfunc (this *MedianFinder) AddNum(num int)  {\r\n\r\n}\r\n\r\n\r\nfunc (this *MedianFinder) FindMedian() float64 {\r\n\r\n}\r\n\r\n\r\n/**\r\n * Your MedianFinder object will be instantiated and called as such:\r\n * obj := Constructor();\r\n * obj.AddNum(num);\r\n * param_2 := obj.FindMedian();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Scala",
          "langSlug": "scala",
          "code": "class MedianFinder() {\r\n\r\n    /** initialize your data structure here. */\r\n\r\n\r\n    def addNum(num: Int) {\r\n\r\n    }\r\n\r\n    def findMedian(): Double = {\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your MedianFinder object will be instantiated and called as such:\r\n * var obj = new MedianFinder()\r\n * obj.addNum(num)\r\n * var param_2 = obj.findMedian()\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Kotlin",
          "langSlug": "kotlin",
          "code": "class MedianFinder() {\r\n\r\n    /** initialize your data structure here. */\r\n\r\n\r\n    fun addNum(num: Int) {\r\n\r\n    }\r\n\r\n    fun findMedian(): Double {\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your MedianFinder object will be instantiated and called as such:\r\n * var obj = MedianFinder()\r\n * obj.addNum(num)\r\n * var param_2 = obj.findMedian()\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Rust",
          "langSlug": "rust",
          "code": "struct MedianFinder {\r\n\r\n}\r\n\r\n\r\n/**\r\n * `&self` means the method takes an immutable reference.\r\n * If you need a mutable reference, change it to `&mut self` instead.\r\n */\r\nimpl MedianFinder {\r\n\r\n    /** initialize your data structure here. */\r\n    fn new() -> Self {\r\n\r\n    }\r\n    \r\n    fn add_num(&self, num: i32) {\r\n\r\n    }\r\n    \r\n    fn find_median(&self) -> f64 {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your MedianFinder object will be instantiated and called as such:\r\n * let obj = MedianFinder::new();\r\n * obj.add_num(num);\r\n * let ret_2: f64 = obj.find_median();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "PHP",
          "langSlug": "php",
          "code": "class MedianFinder {\r\n    /**\r\n     * initialize your data structure here.\r\n     */\r\n    function __construct() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @param Integer $num\r\n     * @return NULL\r\n     */\r\n    function addNum($num) {\r\n\r\n    }\r\n\r\n    /**\r\n     * @return Float\r\n     */\r\n    function findMedian() {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your MedianFinder object will be instantiated and called as such:\r\n * $obj = MedianFinder();\r\n * $obj->addNum($num);\r\n * $ret_2 = $obj->findMedian();\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "TypeScript",
          "langSlug": "typescript",
          "code": "class MedianFinder {\n    constructor() {\n\n    }\n\n    addNum(num: number): void {\n\n    }\n\n    findMedian(): number {\n\n    }\n}\n\n/**\n * Your MedianFinder object will be instantiated and called as such:\n * var obj = new MedianFinder()\n * obj.addNum(num)\n * var param_2 = obj.findMedian()\n */",
          "__typename": "CodeSnippetNode"
        }
      ],
      "stats": "{\"totalAccepted\": \"1.7K\", \"totalSubmission\": \"3.1K\", \"totalAcceptedRaw\": 1698, \"totalSubmissionRaw\": 3058, \"acRate\": \"55.5%\"}",
      "hints": [
        "回想一下，中位数是指比一半数字更大、一半数字更小的数字。",
        "注意，必须存储见过的所有元素。即使是前100个元素中最小的元素也可以成为中间值。你不能抛弃较大或较小的元素。",
        "另一种思考方法是：你能维护元素的下半部分和上半部分吗?",
        "如果使用堆呢？或是两个堆？"
      ],
      "solution": null,
      "status": null,
      "sampleTestCase": "[\"MedianFinder\",\"addNum\",\"addNum\",\"findMedian\",\"addNum\",\"findMedian\"]\n[[],[1],[2],[],[3],[]]",
      "metaData": "{\r\n  \"classname\": \"MedianFinder\",\r\n  \"maxbytesperline\": 410000,\r\n  \"constructor\": {\r\n      \"params\": [\r\n      ],\r\n      \"comment\": \"initialize your data structure here.\"\r\n  },\r\n  \"methods\": [\r\n      { \"name\" : \"addNum\",\r\n        \"params\": [\r\n            {\r\n                \"type\": \"integer\",\r\n                \"name\": \"num\"\r\n            }],\r\n        \"return\": {\r\n            \"type\": \"void\"\r\n        }\r\n      },\r\n      { \"name\": \"findMedian\",\r\n        \"params\": [],\r\n        \"return\": {\r\n            \"type\": \"double\"\r\n        }\r\n      }\r\n  ],\r\n  \"systemdesign\": true,\r\n  \"params\": [\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<String>\",\r\n        \"dealloc\": true\r\n    }\r\n}",
      "judgerAvailable": true,
      "judgeType": "large",
      "mysqlSchemas": [],
      "enableRunCode": true,
      "envInfo": "{\"cpp\":[\"C++\",\"<p>\\u7248\\u672c\\uff1a<code>clang 9<\\/code> \\u91c7\\u7528\\u6700\\u65b0C++ 17\\u6807\\u51c6\\u3002<\\/p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1<\\/code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https:\\/\\/github.com\\/google\\/sanitizers\\/wiki\\/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer<\\/a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds<\\/code>\\u548c<code>use-after-free<\\/code>\\u9519\\u8bef\\u3002<\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002<\\/p>\"],\"java\":[\"Java\",\"<p>\\u7248\\u672c\\uff1a<code>Java SE 13<\\/code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002<\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002<\\/p>\"],\"python\":[\"Python\",\"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12<\\/code><\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/array.html\\\" target=\\\"_blank\\\">array<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/bisect.html\\\" target=\\\"_blank\\\">bisect<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/collections.html\\\" target=\\\"_blank\\\">collections<\\/a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002<\\/p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https:\\/\\/www.python.org\\/dev\\/peps\\/pep-0373\\/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4<\\/a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002<\\/p>\"],\"c\":[\"C\",\"<p>\\u7248\\u672c\\uff1a<code>GCC 8.2<\\/code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002<\\/p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1<\\/code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https:\\/\\/github.com\\/google\\/sanitizers\\/wiki\\/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer<\\/a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds<\\/code>\\u548c<code>use-after-free<\\/code>\\u9519\\u8bef\\u3002<\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002<\\/p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https:\\/\\/troydhanson.github.io\\/uthash\\/\\\" target=\\\"_blank\\\">uthash<\\/a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:<\\/p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a<\\/b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            \\/* we'll use this field as the key *\\/\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; \\/* makes this structure hashable *\\/\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n<\\/pre>\\r\\n<\\/p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a<\\/b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n<\\/pre>\\r\\n<\\/p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a<\\/b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n<\\/pre>\\r\\n<\\/p>\"],\"csharp\":[\"C#\",\"<p><a href=\\\"https:\\/\\/docs.microsoft.com\\/en-us\\/dotnet\\/csharp\\/whats-new\\/csharp-8\\\" target=\\\"_blank\\\">C# 8.0<\\/a><\\/p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>\\/debug<\\/code>)\\u3002<\\/p>\"],\"javascript\":[\"JavaScript\",\"<p>\\u7248\\u672c\\uff1a<code>Node.js 14.8.0<\\/code><\\/p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony<\\/code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http:\\/\\/node.green\\/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027<\\/a>\\u3002<\\/p>\\r\\n\\r\\n<p><a href=\\\"https:\\/\\/lodash.com\\\" target=\\\"_blank\\\">lodash.js<\\/a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002<\\/p>\"],\"ruby\":[\"Ruby\",\"<p>\\u4f7f\\u7528<code>Ruby 2.7<\\/code>\\u6267\\u884c<\\/p>\"],\"swift\":[\"Swift\",\"<p>\\u7248\\u672c\\uff1a<code>Swift 5.2.5<\\/code><\\/p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https:\\/\\/swift.org\\/download\\/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift<\\/a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002<\\/p>\"],\"golang\":[\"Go\",\"<p>\\u7248\\u672c\\uff1a<code>Go 1.15<\\/code><\\/p>\"],\"python3\":[\"Python3\",\"<p>\\u7248\\u672c\\uff1a<code>Python 3.8<\\/code><\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/array.html\\\" target=\\\"_blank\\\">array<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/bisect.html\\\" target=\\\"_blank\\\">bisect<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/collections.html\\\" target=\\\"_blank\\\">collections<\\/a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002<\\/p>\"],\"scala\":[\"Scala\",\"<p>\\u7248\\u672c\\uff1a<code>Scala 2.13<\\/code><\\/p>\"],\"kotlin\":[\"Kotlin\",\"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.3.10<\\/code><\\/p>\"],\"rust\":[\"Rust\",\"<p>\\u7248\\u672c\\uff1a<code>rust 1.46.0<\\/code><\\/p>\\r\\n\\r\\n<p>\\u652f\\u6301 crates.io \\u7684 <a href=\\\"https:\\/\\/crates.io\\/crates\\/rand\\\" target=\\\"_blank\\\">rand<\\/a><\\/p>\"],\"php\":[\"PHP\",\"<p>Run with <code>PHP 7.2<\\/code>.<\\/p>\"],\"typescript\":[\"TypeScript\",\"TypeScript 3.8\\r\\n\\r\\nCompile Options: --strict --target ES6\"]}",
      "book": {
        "id": "2",
        "bookName": "《程序员面试金典（第 6 版）》",
        "pressName": "图灵公司",
        "source": "《程序员面试金典（第 6 版）》独家授权",
        "shortDescription": "英文版：Cracking the Coding Interview，源自硅谷程序员的面试红宝书",
        "fullDescription": "本书是原谷歌资深面试官的经验之作，帮助了许多想要加入脸书、苹果、谷歌等 IT 名企的求职者拿到 Dream offer。本专题的 100+ 编程面试题是在原书基础上精心挑选出来的，帮助你轻松应战 IT 名企技术面试。",
        "bookImgUrl": "https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/09/30/book_2.jpg",
        "pressImgUrl": "https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/02/11/logo20190828-02.png",
        "productUrl": "",
        "__typename": "CategoryInfoNode"
      },
      "isSubscribed": false,
      "isDailyQuestion": false,
      "dailyRecordStatus": null,
      "editorType": "CKEDITOR",
      "ugcQuestionId": null,
      "style": "LEETCODE",
      "__typename": "QuestionNode"
    }
  }
}
