{
  "data": {
    "question": {
      "questionId": "100195",
      "questionFrontendId": "面试题 03.03",
      "boundTopicId": 49272,
      "title": "Stack of Plates LCCI",
      "titleSlug": "stack-of-plates-lcci",
      "content": "<p>Imagine a (literal) stack of plates. If the stack gets too high, it might topple. Therefore, in real life, we would likely start a new stack when the previous stack exceeds some threshold. Implement a data structure <code>SetOfStacks</code> that mimics this.&nbsp;<code>SetOfStacks</code> should be composed of several stacks and should create a new stack once the previous one exceeds capacity. <code>SetOfStacks.push()</code> and <code>SetOfStacks.pop()</code> should behave identically to a single stack (that is, <code>pop()</code> should return the same values as it would if there were just a single stack). Follow Up: Implement a function <code>popAt(int index)</code> which performs a pop operation on a specific sub-stack.</p>\r\n\r\n<p>You should delete the sub-stack when it becomes empty. <code>pop</code>, <code>popAt</code> should return -1 when there&#39;s no element to pop.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: \r\n[&quot;StackOfPlates&quot;, &quot;push&quot;, &quot;push&quot;, &quot;popAt&quot;, &quot;pop&quot;, &quot;pop&quot;]\r\n[[1], [1], [2], [1], [], []]\r\n<strong> Output</strong>: \r\n[null, null, null, 2, 1, -1]\r\n<strong> Explanation</strong>: \r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: \r\n[&quot;StackOfPlates&quot;, &quot;push&quot;, &quot;push&quot;, &quot;push&quot;, &quot;popAt&quot;, &quot;popAt&quot;, &quot;popAt&quot;]\r\n[[2], [1], [2], [3], [0], [0], [0]]\r\n<strong> Output</strong>: \r\n[null, null, null, null, 2, 1, 3]\r\n</pre>\r\n",
      "translatedTitle": "堆盘子",
      "translatedContent": "<p>堆盘子。设想有一堆盘子，堆太高可能会倒下来。因此，在现实生活中，盘子堆到一定高度时，我们就会另外堆一堆盘子。请实现数据结构<code>SetOfStacks</code>，模拟这种行为。<code>SetOfStacks</code>应该由多个栈组成，并且在前一个栈填满时新建一个栈。此外，<code>SetOfStacks.push()</code>和<code>SetOfStacks.pop()</code>应该与普通栈的操作方法相同（也就是说，pop()返回的值，应该跟只有一个栈时的情况一样）。 进阶：实现一个<code>popAt(int index)</code>方法，根据指定的子栈，执行pop操作。</p>\n\n<p>当某个栈为空时，应当删除该栈。当栈中没有元素或不存在该栈时，<code>pop</code>，<code>popAt</code>&nbsp;应返回 -1.</p>\n\n<p><strong>示例1:</strong></p>\n\n<pre><strong> 输入</strong>：\n[&quot;StackOfPlates&quot;, &quot;push&quot;, &quot;push&quot;, &quot;popAt&quot;, &quot;pop&quot;, &quot;pop&quot;]\n[[1], [1], [2], [1], [], []]\n<strong> 输出</strong>：\n[null, null, null, 2, 1, -1]\n</pre>\n\n<p><strong>示例2:</strong></p>\n\n<pre><strong> 输入</strong>：\n[&quot;StackOfPlates&quot;, &quot;push&quot;, &quot;push&quot;, &quot;push&quot;, &quot;popAt&quot;, &quot;popAt&quot;, &quot;popAt&quot;]\n[[2], [1], [2], [3], [0], [0], [0]]\n<strong> 输出</strong>：\n[null, null, null, null, 2, 1, 3]\n</pre>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 6,
      "dislikes": 0,
      "isLiked": null,
      "similarQuestions": "[]",
      "contributors": [],
      "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false, \"typescript\": false}",
      "topicTags": [
        {
          "name": "Design",
          "slug": "design",
          "translatedName": "设计",
          "__typename": "TopicTagNode"
        }
      ],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "C++",
          "langSlug": "cpp",
          "code": "class StackOfPlates {\r\npublic:\r\n    StackOfPlates(int cap) {\r\n\r\n    }\r\n    \r\n    void push(int val) {\r\n\r\n    }\r\n    \r\n    int pop() {\r\n\r\n    }\r\n    \r\n    int popAt(int index) {\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Your StackOfPlates object will be instantiated and called as such:\r\n * StackOfPlates* obj = new StackOfPlates(cap);\r\n * obj->push(val);\r\n * int param_2 = obj->pop();\r\n * int param_3 = obj->popAt(index);\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Java",
          "langSlug": "java",
          "code": "class StackOfPlates {\r\n\r\n    public StackOfPlates(int cap) {\r\n\r\n    }\r\n    \r\n    public void push(int val) {\r\n\r\n    }\r\n    \r\n    public int pop() {\r\n\r\n    }\r\n    \r\n    public int popAt(int index) {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your StackOfPlates object will be instantiated and called as such:\r\n * StackOfPlates obj = new StackOfPlates(cap);\r\n * obj.push(val);\r\n * int param_2 = obj.pop();\r\n * int param_3 = obj.popAt(index);\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Python",
          "langSlug": "python",
          "code": "class StackOfPlates(object):\r\n\r\n    def __init__(self, cap):\r\n        \"\"\"\r\n        :type cap: int\r\n        \"\"\"\r\n\r\n\r\n    def push(self, val):\r\n        \"\"\"\r\n        :type val: int\r\n        :rtype: None\r\n        \"\"\"\r\n\r\n\r\n    def pop(self):\r\n        \"\"\"\r\n        :rtype: int\r\n        \"\"\"\r\n\r\n\r\n    def popAt(self, index):\r\n        \"\"\"\r\n        :type index: int\r\n        :rtype: int\r\n        \"\"\"\r\n\r\n\r\n\r\n# Your StackOfPlates object will be instantiated and called as such:\r\n# obj = StackOfPlates(cap)\r\n# obj.push(val)\r\n# param_2 = obj.pop()\r\n# param_3 = obj.popAt(index)",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Python3",
          "langSlug": "python3",
          "code": "class StackOfPlates:\r\n\r\n    def __init__(self, cap: int):\r\n\r\n\r\n    def push(self, val: int) -> None:\r\n\r\n\r\n    def pop(self) -> int:\r\n\r\n\r\n    def popAt(self, index: int) -> int:\r\n\r\n\r\n\r\n# Your StackOfPlates object will be instantiated and called as such:\r\n# obj = StackOfPlates(cap)\r\n# obj.push(val)\r\n# param_2 = obj.pop()\r\n# param_3 = obj.popAt(index)",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "C",
          "langSlug": "c",
          "code": "\r\n\r\n\r\ntypedef struct {\r\n\r\n} StackOfPlates;\r\n\r\n\r\nStackOfPlates* stackOfPlatesCreate(int cap) {\r\n\r\n}\r\n\r\nvoid stackOfPlatesPush(StackOfPlates* obj, int val) {\r\n\r\n}\r\n\r\nint stackOfPlatesPop(StackOfPlates* obj) {\r\n\r\n}\r\n\r\nint stackOfPlatesPopAt(StackOfPlates* obj, int index) {\r\n\r\n}\r\n\r\nvoid stackOfPlatesFree(StackOfPlates* obj) {\r\n\r\n}\r\n\r\n/**\r\n * Your StackOfPlates struct will be instantiated and called as such:\r\n * StackOfPlates* obj = stackOfPlatesCreate(cap);\r\n * stackOfPlatesPush(obj, val);\r\n \r\n * int param_2 = stackOfPlatesPop(obj);\r\n \r\n * int param_3 = stackOfPlatesPopAt(obj, index);\r\n \r\n * stackOfPlatesFree(obj);\r\n*/",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "C#",
          "langSlug": "csharp",
          "code": "public class StackOfPlates {\r\n\r\n    public StackOfPlates(int cap) {\r\n\r\n    }\r\n    \r\n    public void Push(int val) {\r\n\r\n    }\r\n    \r\n    public int Pop() {\r\n\r\n    }\r\n    \r\n    public int PopAt(int index) {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your StackOfPlates object will be instantiated and called as such:\r\n * StackOfPlates obj = new StackOfPlates(cap);\r\n * obj.Push(val);\r\n * int param_2 = obj.Pop();\r\n * int param_3 = obj.PopAt(index);\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "JavaScript",
          "langSlug": "javascript",
          "code": "/**\r\n * @param {number} cap\r\n */\r\nvar StackOfPlates = function(cap) {\r\n\r\n};\r\n\r\n/** \r\n * @param {number} val\r\n * @return {void}\r\n */\r\nStackOfPlates.prototype.push = function(val) {\r\n\r\n};\r\n\r\n/**\r\n * @return {number}\r\n */\r\nStackOfPlates.prototype.pop = function() {\r\n\r\n};\r\n\r\n/** \r\n * @param {number} index\r\n * @return {number}\r\n */\r\nStackOfPlates.prototype.popAt = function(index) {\r\n\r\n};\r\n\r\n/**\r\n * Your StackOfPlates object will be instantiated and called as such:\r\n * var obj = new StackOfPlates(cap)\r\n * obj.push(val)\r\n * var param_2 = obj.pop()\r\n * var param_3 = obj.popAt(index)\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Ruby",
          "langSlug": "ruby",
          "code": "class StackOfPlates\r\n\r\n=begin\r\n    :type cap: Integer\r\n=end\r\n    def initialize(cap)\r\n\r\n    end\r\n\r\n\r\n=begin\r\n    :type val: Integer\r\n    :rtype: Void\r\n=end\r\n    def push(val)\r\n\r\n    end\r\n\r\n\r\n=begin\r\n    :rtype: Integer\r\n=end\r\n    def pop()\r\n\r\n    end\r\n\r\n\r\n=begin\r\n    :type index: Integer\r\n    :rtype: Integer\r\n=end\r\n    def pop_at(index)\r\n\r\n    end\r\n\r\n\r\nend\r\n\r\n# Your StackOfPlates object will be instantiated and called as such:\r\n# obj = StackOfPlates.new(cap)\r\n# obj.push(val)\r\n# param_2 = obj.pop()\r\n# param_3 = obj.pop_at(index)",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Swift",
          "langSlug": "swift",
          "code": "\r\nclass StackOfPlates {\r\n\r\n    init(_ cap: Int) {\r\n\r\n    }\r\n    \r\n    func push(_ val: Int) {\r\n\r\n    }\r\n    \r\n    func pop() -> Int {\r\n\r\n    }\r\n    \r\n    func popAt(_ index: Int) -> Int {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your StackOfPlates object will be instantiated and called as such:\r\n * let obj = StackOfPlates(cap)\r\n * obj.push(val)\r\n * let ret_2: Int = obj.pop()\r\n * let ret_3: Int = obj.popAt(index)\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Go",
          "langSlug": "golang",
          "code": "type StackOfPlates struct {\r\n\r\n}\r\n\r\n\r\nfunc Constructor(cap int) StackOfPlates {\r\n\r\n}\r\n\r\n\r\nfunc (this *StackOfPlates) Push(val int)  {\r\n\r\n}\r\n\r\n\r\nfunc (this *StackOfPlates) Pop() int {\r\n\r\n}\r\n\r\n\r\nfunc (this *StackOfPlates) PopAt(index int) int {\r\n\r\n}\r\n\r\n\r\n/**\r\n * Your StackOfPlates object will be instantiated and called as such:\r\n * obj := Constructor(cap);\r\n * obj.Push(val);\r\n * param_2 := obj.Pop();\r\n * param_3 := obj.PopAt(index);\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Scala",
          "langSlug": "scala",
          "code": "class StackOfPlates(_cap: Int) {\r\n\r\n    def push(`val`: Int) {\r\n\r\n    }\r\n\r\n    def pop(): Int = {\r\n\r\n    }\r\n\r\n    def popAt(index: Int): Int = {\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your StackOfPlates object will be instantiated and called as such:\r\n * var obj = new StackOfPlates(cap)\r\n * obj.push(`val`)\r\n * var param_2 = obj.pop()\r\n * var param_3 = obj.popAt(index)\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Kotlin",
          "langSlug": "kotlin",
          "code": "class StackOfPlates(cap: Int) {\r\n\r\n    fun push(`val`: Int) {\r\n\r\n    }\r\n\r\n    fun pop(): Int {\r\n\r\n    }\r\n\r\n    fun popAt(index: Int): Int {\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your StackOfPlates object will be instantiated and called as such:\r\n * var obj = StackOfPlates(cap)\r\n * obj.push(`val`)\r\n * var param_2 = obj.pop()\r\n * var param_3 = obj.popAt(index)\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "Rust",
          "langSlug": "rust",
          "code": "struct StackOfPlates {\r\n\r\n}\r\n\r\n\r\n/**\r\n * `&self` means the method takes an immutable reference.\r\n * If you need a mutable reference, change it to `&mut self` instead.\r\n */\r\nimpl StackOfPlates {\r\n\r\n    fn new(cap: i32) -> Self {\r\n\r\n    }\r\n    \r\n    fn push(&self, val: i32) {\r\n\r\n    }\r\n    \r\n    fn pop(&self) -> i32 {\r\n\r\n    }\r\n    \r\n    fn pop_at(&self, index: i32) -> i32 {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your StackOfPlates object will be instantiated and called as such:\r\n * let obj = StackOfPlates::new(cap);\r\n * obj.push(val);\r\n * let ret_2: i32 = obj.pop();\r\n * let ret_3: i32 = obj.pop_at(index);\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "PHP",
          "langSlug": "php",
          "code": "class StackOfPlates {\r\n    /**\r\n     * @param Integer $cap\r\n     */\r\n    function __construct($cap) {\r\n\r\n    }\r\n\r\n    /**\r\n     * @param Integer $val\r\n     * @return NULL\r\n     */\r\n    function push($val) {\r\n\r\n    }\r\n\r\n    /**\r\n     * @return Integer\r\n     */\r\n    function pop() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @param Integer $index\r\n     * @return Integer\r\n     */\r\n    function popAt($index) {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Your StackOfPlates object will be instantiated and called as such:\r\n * $obj = StackOfPlates($cap);\r\n * $obj->push($val);\r\n * $ret_2 = $obj->pop();\r\n * $ret_3 = $obj->popAt($index);\r\n */",
          "__typename": "CodeSnippetNode"
        },
        {
          "lang": "TypeScript",
          "langSlug": "typescript",
          "code": "class StackOfPlates {\n    constructor(cap: number) {\n\n    }\n\n    push(val: number): void {\n\n    }\n\n    pop(): number {\n\n    }\n\n    popAt(index: number): number {\n\n    }\n}\n\n/**\n * Your StackOfPlates object will be instantiated and called as such:\n * var obj = new StackOfPlates(cap)\n * obj.push(val)\n * var param_2 = obj.pop()\n * var param_3 = obj.popAt(index)\n */",
          "__typename": "CodeSnippetNode"
        }
      ],
      "stats": "{\"totalAccepted\": \"3.3K\", \"totalSubmission\": \"8.8K\", \"totalAcceptedRaw\": 3266, \"totalSubmissionRaw\": 8784, \"acRate\": \"37.2%\"}",
      "hints": [
        "你需要追踪每个子栈的大小。当一个栈已满时，你可能需要创建一个新栈。",
        "在一个特定的子栈中弹出一个元素意味着一些栈没有满。这是个问题吗？没有正确的答案，但你应该考虑如何处理这个问题。"
      ],
      "solution": null,
      "status": null,
      "sampleTestCase": "[\"StackOfPlates\", \"push\", \"push\", \"popAt\", \"pop\", \"pop\"]\n[[1], [1], [2], [1], [], []]",
      "metaData": "{\"classname\": \"StackOfPlates\", \"maxbytesperline\": 200000, \"systemdesign\": true, \"constructor\": {\"params\": [{\"name\": \"cap\", \"type\": \"integer\"}]}, \"methods\": [{\"name\": \"push\", \"params\": [{\"name\": \"val\", \"type\": \"integer\"}], \"return\": {\"type\": \"void\"}}, {\"name\": \"pop\", \"params\": [], \"return\": {\"type\": \"integer\"}}, {\"name\": \"popAt\", \"params\": [{\"name\": \"index\", \"type\": \"integer\"}], \"return\": {\"type\": \"integer\"}}], \"params\": [{\"name\": \"inputs\", \"type\": \"integer[]\"}, {\"name\": \"inputs\", \"type\": \"integer[]\"}], \"return\": {\"type\": \"list<String>\", \"dealloc\": true}}",
      "judgerAvailable": true,
      "judgeType": "large",
      "mysqlSchemas": [],
      "enableRunCode": true,
      "envInfo": "{\"cpp\":[\"C++\",\"<p>\\u7248\\u672c\\uff1a<code>clang 9<\\/code> \\u91c7\\u7528\\u6700\\u65b0C++ 17\\u6807\\u51c6\\u3002<\\/p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1<\\/code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https:\\/\\/github.com\\/google\\/sanitizers\\/wiki\\/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer<\\/a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds<\\/code>\\u548c<code>use-after-free<\\/code>\\u9519\\u8bef\\u3002<\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002<\\/p>\"],\"java\":[\"Java\",\"<p>\\u7248\\u672c\\uff1a<code>Java SE 13<\\/code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002<\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002<\\/p>\"],\"python\":[\"Python\",\"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12<\\/code><\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/array.html\\\" target=\\\"_blank\\\">array<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/bisect.html\\\" target=\\\"_blank\\\">bisect<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/collections.html\\\" target=\\\"_blank\\\">collections<\\/a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002<\\/p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https:\\/\\/www.python.org\\/dev\\/peps\\/pep-0373\\/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4<\\/a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002<\\/p>\"],\"c\":[\"C\",\"<p>\\u7248\\u672c\\uff1a<code>GCC 8.2<\\/code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002<\\/p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1<\\/code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https:\\/\\/github.com\\/google\\/sanitizers\\/wiki\\/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer<\\/a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds<\\/code>\\u548c<code>use-after-free<\\/code>\\u9519\\u8bef\\u3002<\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002<\\/p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https:\\/\\/troydhanson.github.io\\/uthash\\/\\\" target=\\\"_blank\\\">uthash<\\/a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:<\\/p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a<\\/b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            \\/* we'll use this field as the key *\\/\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; \\/* makes this structure hashable *\\/\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n<\\/pre>\\r\\n<\\/p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a<\\/b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n<\\/pre>\\r\\n<\\/p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a<\\/b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n<\\/pre>\\r\\n<\\/p>\"],\"csharp\":[\"C#\",\"<p><a href=\\\"https:\\/\\/docs.microsoft.com\\/en-us\\/dotnet\\/csharp\\/whats-new\\/csharp-8\\\" target=\\\"_blank\\\">C# 8.0<\\/a><\\/p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>\\/debug<\\/code>)\\u3002<\\/p>\"],\"javascript\":[\"JavaScript\",\"<p>\\u7248\\u672c\\uff1a<code>Node.js 14.8.0<\\/code><\\/p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony<\\/code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http:\\/\\/node.green\\/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027<\\/a>\\u3002<\\/p>\\r\\n\\r\\n<p><a href=\\\"https:\\/\\/lodash.com\\\" target=\\\"_blank\\\">lodash.js<\\/a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002<\\/p>\"],\"ruby\":[\"Ruby\",\"<p>\\u4f7f\\u7528<code>Ruby 2.7<\\/code>\\u6267\\u884c<\\/p>\"],\"swift\":[\"Swift\",\"<p>\\u7248\\u672c\\uff1a<code>Swift 5.2.5<\\/code><\\/p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https:\\/\\/swift.org\\/download\\/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift<\\/a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002<\\/p>\"],\"golang\":[\"Go\",\"<p>\\u7248\\u672c\\uff1a<code>Go 1.15<\\/code><\\/p>\"],\"python3\":[\"Python3\",\"<p>\\u7248\\u672c\\uff1a<code>Python 3.8<\\/code><\\/p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/array.html\\\" target=\\\"_blank\\\">array<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/bisect.html\\\" target=\\\"_blank\\\">bisect<\\/a>, <a href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/collections.html\\\" target=\\\"_blank\\\">collections<\\/a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002<\\/p>\"],\"scala\":[\"Scala\",\"<p>\\u7248\\u672c\\uff1a<code>Scala 2.13<\\/code><\\/p>\"],\"kotlin\":[\"Kotlin\",\"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.3.10<\\/code><\\/p>\"],\"rust\":[\"Rust\",\"<p>\\u7248\\u672c\\uff1a<code>rust 1.46.0<\\/code><\\/p>\\r\\n\\r\\n<p>\\u652f\\u6301 crates.io \\u7684 <a href=\\\"https:\\/\\/crates.io\\/crates\\/rand\\\" target=\\\"_blank\\\">rand<\\/a><\\/p>\"],\"php\":[\"PHP\",\"<p>Run with <code>PHP 7.2<\\/code>.<\\/p>\"],\"typescript\":[\"TypeScript\",\"TypeScript 3.8\\r\\n\\r\\nCompile Options: --strict --target ES6\"]}",
      "book": {
        "id": "2",
        "bookName": "《程序员面试金典（第 6 版）》",
        "pressName": "图灵公司",
        "source": "《程序员面试金典（第 6 版）》独家授权",
        "shortDescription": "英文版：Cracking the Coding Interview，源自硅谷程序员的面试红宝书",
        "fullDescription": "本书是原谷歌资深面试官的经验之作，帮助了许多想要加入脸书、苹果、谷歌等 IT 名企的求职者拿到 Dream offer。本专题的 100+ 编程面试题是在原书基础上精心挑选出来的，帮助你轻松应战 IT 名企技术面试。",
        "bookImgUrl": "https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/09/30/book_2.jpg",
        "pressImgUrl": "https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/02/11/logo20190828-02.png",
        "productUrl": "",
        "__typename": "CategoryInfoNode"
      },
      "isSubscribed": false,
      "isDailyQuestion": false,
      "dailyRecordStatus": null,
      "editorType": "CKEDITOR",
      "ugcQuestionId": null,
      "style": "LEETCODE",
      "__typename": "QuestionNode"
    }
  }
}
